module(
    name = "rules_zig",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "platforms", version = "0.0.8")

zig = use_extension("//zig:extensions.bzl", "zig")
zig.toolchain(zig_version = "0.11.0")
use_repo(zig, "zig_toolchains")

register_toolchains("@rules_zig//zig/target:all")

register_toolchains("@zig_toolchains//:all")

bazel_dep(name = "aspect_bazel_lib", version = "1.32.1", dev_dependency = True)
bazel_dep(name = "gazelle", version = "0.29.0", dev_dependency = True, repo_name = "bazel_gazelle")
bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.4.1", dev_dependency = True)
bazel_dep(
    name = "buildifier_prebuilt",
    version = "6.1.0",
    dev_dependency = True,
)
bazel_dep(name = "rules_multirun", version = "0.6.1", dev_dependency = True)
bazel_dep(name = "rules_python", version = "0.22.0", dev_dependency = True)
bazel_dep(
    name = "rules_bazel_integration_test",
    version = "0.14.1",
    dev_dependency = True,
)

bazel_binaries = use_extension(
    "@rules_bazel_integration_test//:extensions.bzl",
    "bazel_binaries",
    dev_dependency = True,
)
bazel_binaries.download(version_file = "//:.bazelversion")
bazel_binaries.download(version = "5.3.2")
use_repo(
    bazel_binaries,
    "bazel_binaries",
    # TODO[AH] Should be implicit through bazel_binaries.
    "build_bazel_bazel_.bazelversion",
    "build_bazel_bazel_5_3_2",
)

# TODO[AH] Should be an implicit transitive dependency through rules_bazel_integration_test.
bazel_dep(name = "cgrindel_bazel_starlib", version = "0.16.0", dev_dependency = True)
