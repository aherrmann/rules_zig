"""Helper targets to enable libc or libc++ linking.

The Zig compiler ships with various versions of libc and libc++. However, it
does not link against these libraries by default, and accordingly does not
expose standard library headers for C imports by default. To enable the import
of C standard library headers the compiler must be instructed to link against
libc or libc++ as appropriate.

The targets provided in this package can be used to accomplish this. Simply add
them to the `cdeps` attribute of your Zig target to enable libc or libc++
linking. E.g.

```
zig_binary(
    name = "binary",
    main = "main.zig",
    cdeps = ["@rules_zig//zig/lib:libc"],
)
```

The Zig compiler includes a header file `zig.h` that is imported by header
files generated with `-femit-h`. This toolchain header file is exposed by the
`:zig_header` target in this package, which can be used as a regular `cc_*`
target dependency.
"""

load("//zig/private:cc_linkopts.bzl", "cc_linkopts")
load("//zig/private:zig_toolchain_header.bzl", "zig_toolchain_header")

zig_toolchain_header(
    name = "zig_header",
    visibility = ["//visibility:public"],
)

cc_linkopts(
    name = "libc",
    linkopts = ["-lc"],
    visibility = ["//visibility:public"],
)

cc_linkopts(
    name = "libc++",
    linkopts = ["-lc++"],
    visibility = ["//visibility:public"],
)

# Execute `bazel run //util:update_filegroups` to update this target.
filegroup(
    name = "all_files",
    srcs = [":BUILD.bazel"],
    visibility = ["//zig:__pkg__"],
)
