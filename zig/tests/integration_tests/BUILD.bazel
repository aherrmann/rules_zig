load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template_rule")
load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_test",
    "bazel_integration_tests",
    "integration_test_utils",
)
load("//zig:defs.bzl", "zig_module", "zig_test")
load("//zig/private:versions.bzl", "TOOL_VERSIONS")

# gazelle:exclude workspace

expand_template_rule(
    name = "build_metadata",
    out = ".bazelrc.meta",
    stamp = 1,
    stamp_substitutions = {
        "{{REPO_URL}}": "{{REPO_URL}}",
        "{{GIT_BRANCH}}": "{{GIT_BRANCH}}",
        "{{COMMIT_SHA}}": "{{COMMIT_SHA}}",
    },
    template = ".bazelrc.meta.tpl",
)

workspace_files = integration_test_utils.glob_workspace_files("workspace") + [
    "//:all_files",
    "//:bazelrc",
    ".bazelrc.meta",
]

zig_module(
    name = "integration_testing",
    main = "integration_testing.zig",
)

zig_test(
    name = "integration_tests_runner",
    main = "integration_tests_runner.zig",
    tags = ["manual"],
    deps = [":integration_testing"],
)

bazel_integration_tests(
    name = "bzlmod_test",
    size = "medium",
    bazel_versions = bazel_binaries.versions.all,
    tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    test_runner = ":integration_tests_runner",
    workspace_files = workspace_files,
    workspace_path = "workspace",
)

TEST_VERSIONS = TOOL_VERSIONS.keys() + [
    "0.16.0-dev.381+bc512648d",
]

[
    expand_template(
        name = "zig_version_test_%s_zig_source" % zig_version,
        out = "zig_version_test_%s.zig" % zig_version,
        substitutions = {
            "%ZIG_VERSION%": zig_version,
        },
        template = "zig_version_test.zig.tpl",
    )
    for zig_version in TEST_VERSIONS
]

write_file(
    name = "zig_version_tests_runner_zig_source",
    out = "zig_version_tests_runner.zig",
    content = [
        "test {",
    ] + [
        '    _ = @import("zig_version_test_%s.zig");' % zig_version
        for zig_version in TEST_VERSIONS
    ] + [
        "}",
    ],
)

zig_test(
    name = "zig_version_tests_runner",
    srcs = [
        "zig_version_test_%s.zig" % zig_version
        for zig_version in TEST_VERSIONS
    ],
    main = "zig_version_tests_runner.zig",
    tags = ["manual"],
    deps = [":integration_testing"],
)

bazel_integration_test(
    name = "zig_version_tests",
    size = "medium",
    bazel_version = bazel_binaries.versions.current,
    tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    test_runner = ":zig_version_tests_runner",
    workspace_files = workspace_files,
    workspace_path = "workspace",
)

minimal_files = integration_test_utils.glob_workspace_files("minimal") + [
    "//:all_files",
    "//:bazelrc",
    ".bazelrc.meta",
]

zig_test(
    name = "minimal_tests_runner",
    main = "minimal_tests_runner.zig",
    tags = ["manual"],
    deps = [":integration_testing"],
)

bazel_integration_tests(
    name = "minimal_test",
    timeout = "moderate",
    bazel_versions = bazel_binaries.versions.all,
    tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    test_runner = ":minimal_tests_runner",
    workspace_files = minimal_files,
    workspace_path = "minimal",
)

test_suite(
    name = "integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = integration_test_utils.bazel_integration_test_names(
        "minimal_test",
        bazel_binaries.versions.all,
    ) + integration_test_utils.bazel_integration_test_names(
        "bzlmod_test",
        bazel_binaries.versions.all,
    ) + [
        ":zig_version_tests",
    ],
)
